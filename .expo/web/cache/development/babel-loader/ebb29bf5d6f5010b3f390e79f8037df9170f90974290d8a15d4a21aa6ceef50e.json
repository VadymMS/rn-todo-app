{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _this = this,\n  _jsxFileName = \"/Users/vadymmykhailichenko/Desktop/vadym/projects/educational-projects/react-native/react-native-demo/src/components/ui/AppButton.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AppTextBold } from \"./AppTextBold\";\nimport { THEME } from \"../../theme\";\nexport var AppButton = function AppButton(_ref) {\n  var children = _ref.children,\n    onPress = _ref.onPress,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? THEME.MAIN_COLOR : _ref$color;\n  var Wrapper = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n  return React.createElement(Wrapper, {\n    onPress: onPress,\n    activeOpacity: 0.7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.button), {}, {\n      backgroundColor: color\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, React.createElement(AppTextBold, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, children)));\n};\nvar styles = StyleSheet.create({\n  button: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","TouchableOpacity","TouchableNativeFeedback","Platform","AppTextBold","THEME","AppButton","_ref","children","onPress","_ref$color","color","MAIN_COLOR","Wrapper","OS","createElement","activeOpacity","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","_objectSpread","styles","button","backgroundColor","text","create","paddingHorizontal","paddingVertical","borderRadius","flexDirection","alignItems","justifyContent"],"sources":["/Users/vadymmykhailichenko/Desktop/vadym/projects/educational-projects/react-native/react-native-demo/src/components/ui/AppButton.js"],"sourcesContent":["import React from 'react';\nimport {StyleSheet, View, TouchableOpacity, TouchableNativeFeedback, Platform} from 'react-native';\nimport {AppTextBold} from './AppTextBold';\nimport {THEME} from '../../theme';\n\nexport const AppButton = ({children, onPress, color = THEME.MAIN_COLOR}) => {\n    const Wrapper = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n    return (\n        <Wrapper onPress={onPress} activeOpacity={0.7}>\n            <View style={{...styles.button, backgroundColor: color}}>\n                <AppTextBold style={styles.text}>{children}</AppTextBold>\n            </View>\n        </Wrapper>\n    );\n};\n\nconst styles = StyleSheet.create({\n    button: {\n        paddingHorizontal: 20,\n        paddingVertical: 10,\n        borderRadius: 5,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    text: {\n        color: '#fff',\n    },\n});\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,uBAAA;AAAA,OAAAC,QAAA;AAE1B,SAAQC,WAAW;AACnB,SAAQC,KAAK;AAEb,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAsD;EAAA,IAAjDC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAAC,UAAA,GAAAH,IAAA,CAAEI,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAGL,KAAK,CAACO,UAAU,GAAAF,UAAA;EAClE,IAAMG,OAAO,GAAGV,QAAQ,CAACW,EAAE,KAAK,SAAS,GAAGZ,uBAAuB,GAAGD,gBAAgB;EACtF,OACIH,KAAA,CAAAiB,aAAA,CAACF,OAAO;IAACJ,OAAO,EAAEA,OAAQ;IAACO,aAAa,EAAE,GAAI;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1CzB,KAAA,CAAAiB,aAAA,CAACf,IAAI;IAACwB,KAAK,EAAAC,aAAA,CAAAA,aAAA,KAAMC,MAAM,CAACC,MAAM;MAAEC,eAAe,EAAEjB;IAAK,EAAE;IAAAM,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpDzB,KAAA,CAAAiB,aAAA,CAACX,WAAW;IAACoB,KAAK,EAAEE,MAAM,CAACG,IAAK;IAAAZ,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEf,QAAQ,CAAe,CACtD,CACD;AAElB,CAAC;AAED,IAAMkB,MAAM,GAAG3B,UAAU,CAAC+B,MAAM,CAAC;EAC7BH,MAAM,EAAE;IACJI,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDP,IAAI,EAAE;IACFlB,KAAK,EAAE;EACX;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}